DC No Scan --> header
DC No maual ...

INTERNAL DOCUMENT
ADSTORAGE ---> WHERE UNIQUEID = 67845101

---------------------*----------------------*-------------------------*---------------------*-

My Query -----> SELECT * FROM DB2INST1.INTERNALDOCUMENT 
                WHERE PROVISIONALCODE = %s
                FETCH FIRST 1 ROWS ONLY

Query ---------> 
SELECT 
    ID.COMPANYCODE,ID.DIVISIONCODE,ID.TEMPLATECODE,ID.PROVISIONALCOUNTERCODE,
    ID.PROVISIONALCODE,ID.PROVISIONALDOCUMENTDATE,OC.LONGDESCRIPTION,
    IDL.ITEMDESCRIPTION,IDL.BASEPRIMARYQUANTITY,IDL.BASEPRIMARYUOMCODE,AD.ADDRESSEE,
    ADS_VALUESTRING(ID.ABSUNIQUEID, 'InternalDocument', 'VEHICLENUMBER', 'VEHICLENUMBER') AS VehicleNumber,
    ADS_VALUESTRING(ID.ABSUNIQUEID, 'InternalDocument', 'NoofPackages', 'NoofPackages') AS NoOfPackages,
    ADS_VALUESTRING(ID.ABSUNIQUEID, 'InternalDocument', 'MOBILENO', 'MOBILENO') AS MobileNo,
    ADS_VALUESTRING(ID.ABSUNIQUEID, 'InternalDocument', 'DRIVERNAME', 'DRIVERNAME') AS DriverName
FROM INTERNALDOCUMENT ID
LEFT OUTER JOIN INTERNALDOCUMENTLINE IDL
    ON IDL.INTERNALDOCUMENTCOMPANYCODE = ID.COMPANYCODE
    AND IDL.INTDOCPROVISIONALCOUNTERCODE = ID.PROVISIONALCOUNTERCODE
    AND IDL.INTDOCUMENTPROVISIONALCODE = ID.PROVISIONALCODE
LEFT OUTER  JOIN ADDRESS AD 
    ON AD.UNIQUEID = ID.DELIVERYPOINTUNIQUEID
    AND AD.CODE = ID.DELIVERYPOINTCODE
LEFT OUTER JOIN ORDERCATEGORY OC
    ON OC.CODE = ID.ORDERCATEGORYCODE
WHERE ID.TEMPLATECODE = 'D01';


*------------------*-------------------*------------------------*--------------------------*---

views.py -----------------> CODE

from django.shortcuts import render
from django.db import connection

def scanner(request):
    trips = []

    if request.method == 'POST':
        qr_input = request.POST.get('qr_code_value')

        if qr_input:
            with connection.cursor() as cursor:
                cursor.execute("""
                    SELECT 
                        ID.COMPANYCODE,
                        ID.DIVISIONCODE,
                        ID.TEMPLATECODE,
                        ID.PROVISIONALCOUNTERCODE,
                        ID.PROVISIONALCODE,
                        ID.PROVISIONALDOCUMENTDATE,
                        OC.LONGDESCRIPTION,
                        IDL.ITEMDESCRIPTION,
                        IDL.BASEPRIMARYQUANTITY,
                        IDL.BASEPRIMARYUOMCODE,
                        AD.ADDRESSEE,
                        ADS_VALUESTRING(ID.ABSUNIQUEID, 'InternalDocument', 'VEHICLENUMBER', 'VEHICLENUMBER') AS VehicleNumber,
                        ADS_VALUESTRING(ID.ABSUNIQUEID, 'InternalDocument', 'NoofPackages', 'NoofPackages') AS NoOfPackages,
                        ADS_VALUESTRING(ID.ABSUNIQUEID, 'InternalDocument', 'MOBILENO', 'MOBILENO') AS MobileNo,
                        ADS_VALUESTRING(ID.ABSUNIQUEID, 'InternalDocument', 'DRIVERNAME', 'DRIVERNAME') AS DriverName
                    FROM DB2INST1.INTERNALDOCUMENT ID
                    LEFT OUTER JOIN DB2INST1.INTERNALDOCUMENTLINE IDL
                        ON IDL.INTERNALDOCUMENTCOMPANYCODE = ID.COMPANYCODE
                        AND IDL.INTDOCPROVISIONALCOUNTERCODE = ID.PROVISIONALCOUNTERCODE
                        AND IDL.INTDOCUMENTPROVISIONALCODE = ID.PROVISIONALCODE
                    LEFT OUTER JOIN DB2INST1.ADDRESS AD 
                        ON AD.UNIQUEID = ID.DELIVERYPOINTUNIQUEID
                        AND AD.CODE = ID.DELIVERYPOINTCODE
                    LEFT OUTER JOIN DB2INST1.ORDERCATEGORY OC
                        ON OC.CODE = ID.ORDERCATEGORYCODE
                    WHERE ID.TEMPLATECODE = 'D01'
                        AND ID.PROVISIONALCODE = %s
                """, [qr_input])

                rows = cursor.fetchall()
                if rows:
                    for row in rows:
                        trips.append({
                            'companycode': row[0] or '',
                            'divisioncode': row[1] or '',
                            'templatecode': row[2] or '',
                            'provisionalcountercode': row[3] or '',
                            'provisionalcode': row[4] or '',
                            'provisionaldocumentdate': row[5].strftime('%Y-%m-%d') if row[5] else '',
                            'longdescription': row[6] or '',
                            'itemdescription': row[7] or '',
                            'baseprimaryquantity': row[8] or '',
                            'baseprimaryuomcode': row[9] or '',
                            'addressee': row[10] or '',
                            'vehiclenumber': row[11] or '',
                            'noofpackages': row[12] or '',
                            'mobileno': row[13] or '',
                            'drivername': row[14] or '',
                        })
                else:
                    trips.append({'error': 'No matching record found.'})
        else:
            trips.append({'error': 'QR code is empty.'})

    return render(request, 'pages/scan.html', {'trips': trips})


*------------------*----------------------*----------------------*-------------------------*------------------------
PLANT INVOICE QUERY

SELECT 
PL.COMPANYCODE,PL.DIVISIONCODE,PL.INVOICETYPECODE,PL.INVOICEDATE,PL.DELIVERYPOINTCODE,
PL.CODE,PL.CHALLANNO,PL.CHALLANDATE,
CASE WHEN PL.DELIVERYPOINTCODE='' THEN BD.LEGALNAME1 ELSE AD.ADDRESSEE END AS ADDRESS,
PL.CATEGORY,PL.CONTAINERNO,PLI.PACKINGQTY,PLI.PRIMARYUMCODE,PLI.PRIMARYQTY
from
PLANTINVOICE PL
LEFT OUTER JOIN ADDRESS AD
     ON  AD.UNIQUEID = PL.DELIVERYPOINTUNIQUEID
     AND AD.CODE = PL.DELIVERYPOINTCODE
LEFT OUTER JOIN ORDERPARTNER OD
     ON  OD.CUSTOMERSUPPLIERCOMPANYCODE=PL.COMPANYCODE
     AND OD.CUSTOMERSUPPLIERTYPE= PL.CONSIGNEECUSTOMERSUPPLIERTYPE 
     AND OD.CUSTOMERSUPPLIERCODE= PL.CONSIGNEECUSTOMERSUPPLIERCODE
LEFT OUTER JOIN BUSINESSPARTNER BD
     ON BD.NUMBERID = OD.ORDERBUSINESSPARTNERNUMBERID
LEFT OUTER JOIN PLANTINVOICELINE PLI
     ON PLI.PLANTINVOICECOMPANYCODE=PL.COMPANYCODE
     AND PLI.PLANTINVOICEDIVISIONCODE= PL.DIVISIONCODE
     AND PLI.PLANTINVOICECODE= PL.CODE
WHERE PL.COMPANYCODE='100'
and pl.CHALLANNO = 'D1E19200005'

*----------------*-------------------*---------------------*------------------*------------------*------------------
COMMERCIAL INVOICE QUERY

SELECT 
CI.COMPANYCODE,CI.DIVISIONCODE,CI.INVOICETYPECODE,CI.CODE,
CI.INVOICEDATE,CIL.PRIMARYQTY,CIL.PRIMARYUMCODE,CIL.PACKINGQTY,
CI.CATEGORY,CI.CONTAINERNO,BD1.LEGALNAME1,
CASE WHEN CI.DIVISIONCODE IN ('104' ,'201' ,'102') THEN
 CASE WHEN CI.DELIVERYPOINTCODE = '' THEN AD.ADDRESSEE  ELSE BD.LEGALNAME1 END 
 ELSE CASE WHEN BD1.LEGALNAME1 is null THEN BD.ADDRESSLINE1 ELSE BD1.LEGALNAME1 END  END AS ADDRESS
FROM COMMERCIALINVOICE CI
LEFT OUTER JOIN COMMERCIALINVOICELINE CIL
    ON CIL.COMMERCIALINVOICECOMPANYCODE=CI.COMPANYCODE
    AND CIL.COMMERCIALINVOICEDIVISIONCODE = CI.DIVISIONCODE
    AND CIL.COMMERCIALINVOICECODE= CI.CODE
LEFT OUTER JOIN SKPCOMMERCIALINVOICE DC
    ON DC.COMPANYCODE = CI.COMPANYCODE
    AND DC.DIVISIONCODE= CI.DIVISIONCODE
    AND DC.CODE = CI.CODE
LEFT OUTER JOIN ADDRESS AD
    ON AD.UNIQUEID=CI.DELIVERYPOINTUNIQUEID
    AND AD.CODE=CI.DELIVERYPOINTCODE
LEFT OUTER JOIN ORDERPARTNER OD
    ON OD.CUSTOMERSUPPLIERCOMPANYCODE= CI.COMPANYCODE
    AND OD.CUSTOMERSUPPLIERTYPE =CI.CONSIGNEECUSTOMERSUPPLIERTYPE
    AND OD.CUSTOMERSUPPLIERCODE= CI.CONSIGNEECUSTOMERSUPPLIERCODE
LEFT OUTER JOIN BUSINESSPARTNER BD
     ON BD.NUMBERID = OD.ORDERBUSINESSPARTNERNUMBERID
 LEFT OUTER JOIN ORDERPARTNER OD1
    ON OD1.CUSTOMERSUPPLIERCOMPANYCODE= CI.COMPANYCODE
    AND OD1.CUSTOMERSUPPLIERTYPE =CI.NOTIFYPARTYCSMSUPPLIERTYPE
    AND OD1.CUSTOMERSUPPLIERCODE= CI.NOTIFYPARTYCSMSUPPLIERCODE
LEFT OUTER JOIN BUSINESSPARTNER BD1
     ON BD1.NUMBERID = OD1.ORDERBUSINESSPARTNERNUMBERID
WHERE ci.COMPANYCODE = '100'
and dc.GRDETAILS = 'D1D20210062'
*----------------*-------------------*---------------------*------------------*------------------*------------------